stu_pf %>% group_by(race.ethnicity) %>% summarize(p_value=shapiro.test(math.score)$p.value)
# (2) 同質性檢查
#使用leveneTest：
#確認不同組別數值是否變異數相等。
# p-value > 0.05，資料數值符合相同變異數。
# p-value < 0.05，資料數值不符合相同變異數。
library(car)
leveneTest(math.score ~ race.ethnicity, stu_pf)
#寫法一
aov.race <- aov(math.score ~ race.ethnicity, data = stu_pf)
summary(aov.race)
#寫法二
oneway.test(math.score ~ race.ethnicity, data = stu_pf, var.equal = TRUE)
result <- TukeyHSD(aov.race, conf.level=0.95)
## las=1 -> 使y軸的標題為橫向
plot(result, las=1, col="red", cex.axis=0.5)
#報告題目
#報告題目
#組別 : 1,3,4,6,7
#報告題目
#組別 : 1,3,4,6,7
#使用資料集：diamond.csv
#報告題目
#組別 : 1,3,4,6,7
#使用資料集：diamond.csv
#(1,3,4)：試探討鑽石的clarity對於其價格的影響
#報告題目
#組別 : 1,3,4,6,7
#使用資料集：diamond.csv
#(1,3,4)：試探討鑽石的clarity對於其價格的影響
#(6,7) ： 試探討鑽石的color對於其價格的影響
#報告題目
#組別 : 1,3,4,6,7
#使用資料集：diamond.csv
#(1,3,4)：試探討鑽石的clarity對於其價格的影響
#(6,7) ： 試探討鑽石的color對於其價格的影響
#
#報告題目
#組別 : 1,3,4,6,7
#使用資料集：diamond.csv
#(1,3,4)：試探討鑽石的clarity對於其價格的影響
#(6,7) ： 試探討鑽石的color對於其價格的影響
#
#看各族群的數學成績是否符合常態分佈
stu_pf %>% group_by(race.ethnicity) %>% summarize(p_value=shapiro.test(math.score)$p.value)
#寫法一
aov.race <- aov(math.score ~ race.ethnicity, data = stu_pf)
summary(aov.race)
#寫法二
oneway.test(math.score ~ race.ethnicity, data = stu_pf, var.equal = TRUE)
result <- TukeyHSD(aov.race, conf.level=0.95)
## las=1 -> 使y軸的標題為橫向
plot(result, las=1, col="red", cex.axis=0.5)
## las=1 -> 使y軸的標題為橫向
plot(result, las=1, col="red", cex.axis=0.5)
ggplot(stu_pf, aes(x = parental.level.of.education, y = reading.score)) +
geom_boxplot()
# 檢查是否符合ANOVA的假設（常態性、同質性）
stu_pf %>% group_by(parental.level.of.education) %>% summarize(p_value=shapiro.test(reading.score)$p.value)
leveneTest(reading.score ~ parental.level.of.education, stu_pf)
# (2) 同質性檢查
#使用leveneTest：
#確認不同組別數值是否變異數相等。
# p-value > 0.05，資料數值符合相同變異數。
# p-value < 0.05，資料數值不符合相同變異數。
library(car)
leveneTest(reading.score ~ parental.level.of.education, stu_pf)
library(dplyr)
#看各族群的數學成績是否符合常態分佈
stu_pf %>% group_by(race.ethnicity) %>% summarize(p_value=shapiro.test(math.score)$p.value)
# (2) 同質性檢查
#使用leveneTest：
#確認不同組別數值是否變異數相等。
# p-value > 0.05，資料數值符合相同變異數。
# p-value < 0.05，資料數值不符合相同變異數。
library(car)
leveneTest(math.score ~ race.ethnicity, stu_pf)
aov2.race <- aov(reading.score ~ parental.level.of.education, data = stu_pf)
summary(aov2.race)
#寫法二
oneway.test(reading.score ~ parental.level.of.education, data = stu_pf, var.equal = TRUE)
result2 <- TukeyHSD(aov2.race, conf.level=0.95)
## las=1 -> 使y軸的標題為橫向
plot(result2, las=1, col="red", cex.axis=0.5)
str(iris)
str(iris)
View(iris)
#花萼長度(Sepal.Length)：計算單位是公分。(連續)
#花萼長度(Sepal.Length)：計算單位是公分。(連續)
#花萼寬度(Sepal.Width)：計算單位是公分。(連續)
#花萼長度(Sepal.Length)：計算單位是公分。(連續)
#花萼寬度(Sepal.Width)：計算單位是公分。(連續)
#花瓣長度(Petal.Length) ：計算單位是公分。(連續)
#花萼長度(Sepal.Length)：計算單位是公分。(連續)
#花萼寬度(Sepal.Width)：計算單位是公分。(連續)
#花瓣長度(Petal.Length) ：計算單位是公分。(連續)
#花瓣寬度(Petal.Width)：計算單位是公分。(連續)
### 小考題目：探討不同品種(Species)的花瓣長度(Petal.Length)是否有差異？（80%）
library(ggplot2)
ggplot(iris, aes(x = Species, y = Petal.Length)) +
geom_boxplot()
#常態性檢查
library(dplyr)
iris %>% group_by(Species) %>% summarize(p_value=shapiro.test(Petal.Length)$p.value)
leveneTest(Petal.Length ~ Species, iris)
View(stu_pf)
aov.race <- aov(Petal.Length ~ Species, data = iris)
summary(aov.race)
result <- TukeyHSD(aov.race, conf.level=0.95)
## las=1 -> 使y軸的標題為橫向
plot(result, las=1, col="red", cex.axis=0.5)
stu_pf <- read.csv("./Diamond.csv")
stu_pf <- read.csv("./DiamondsPrices.csv")
View(stu_pf)
df <- read.csv("./DiamondsPrices.csv")
View(df)
df <- read.csv("../DiamondsPrices.csv")
View(df)
#常態性檢查
library(dplyr)
iris %>% group_by(clarity) %>% summarize(p_value=shapiro.test(price)$p.value)
#常態性檢查
library(dplyr)
df %>% group_by(clarity) %>% summarize(p_value=shapiro.test(price)$p.value)
#Read the file
stu_pf <- read.csv("./StudentsPerformance.csv")
View(stu_pf)
## 畫出盒狀圖（x-各族群、y-數學成績）
library(ggplot2)
ggplot(stu_pf, aes(x = race.ethnicity, y = math.score)) +
geom_boxplot()
library(dplyr)
#看各族群的數學成績是否符合常態分佈
stu_pf %>% group_by(race.ethnicity) %>% summarize(p_value=shapiro.test(math.score)$p.value)
# (2) 同質性檢查
#使用leveneTest：
#確認不同組別數值是否變異數相等。
# p-value > 0.05，資料數值符合相同變異數。
# p-value < 0.05，資料數值不符合相同變異數。
library(car)
leveneTest(math.score ~ race.ethnicity, stu_pf)
#寫法一
aov.race <- aov(math.score ~ race.ethnicity, data = stu_pf)
library(car)
leveneTest(price ~ clarity, df)
leveneTest(clarity ~ price, df)
#寫法一
aov.race <- aov(math.score ~ race.ethnicity, data = stu_pf)
summary(aov.race)
#Read the file
stu_pf <- read.csv("./StudentsPerformance.csv")
View(stu_pf)
## 畫出盒狀圖（x-各族群、y-數學成績）
library(ggplot2)
ggplot(stu_pf, aes(x = race.ethnicity, y = math.score)) +
geom_boxplot()
library(dplyr)
#看各族群的數學成績是否符合常態分佈
stu_pf %>% group_by(race.ethnicity) %>% summarize(p_value=shapiro.test(math.score)$p.value)
# (2) 同質性檢查
#使用leveneTest：
#確認不同組別數值是否變異數相等。
# p-value > 0.05，資料數值符合相同變異數。
# p-value < 0.05，資料數值不符合相同變異數。
library(car)
leveneTest(math.score ~ race.ethnicity, stu_pf)
#寫法一
aov.race <- aov(math.score ~ race.ethnicity, data = stu_pf)
summary(aov.race)
#寫法二
oneway.test(math.score ~ race.ethnicity, data = stu_pf, var.equal = TRUE)
result <- TukeyHSD(aov.race, conf.level=0.95)
## las=1 -> 使y軸的標題為橫向
plot(result, las=1, col="red", cex.axis=0.5)
ggplot(stu_pf, aes(x = parental.level.of.education, y = reading.score)) +
geom_boxplot()
# 檢查是否符合ANOVA的假設（常態性、同質性）
stu_pf %>% group_by(parental.level.of.education) %>% summarize(p_value=shapiro.test(reading.score)$p.value)
leveneTest(reading.score ~ parental.level.of.education, stu_pf)
aov2.race <- aov(reading.score ~ parental.level.of.education, data = stu_pf)
summary(aov2.race)
#寫法二
oneway.test(reading.score ~ parental.level.of.education, data = stu_pf, var.equal = TRUE)
result2 <- TukeyHSD(aov2.race, conf.level=0.95)
## las=1 -> 使y軸的標題為橫向
plot(result2, las=1, col="red", cex.axis=0.5)
ggplot(stu_pf, aes(x = math.score, fill = race.ethnicity)) +
geom_histogram(binwidth = 500, alpha = 0.7) +
facet_wrap(~race.ethnicity, nrow = 2) +
labs(title = "Price Distribution by Clarity", x = "Price", y = "Frequency") +
theme_bw()
ggplot(stu_pf, aes(x = math.score, fill = race.ethnicity)) +
geom_histogram(binwidth = 5, alpha = 0.7) +
facet_wrap(~race.ethnicity, nrow = 2) +
labs(title = "Price Distribution by Clarity", x = "Price", y = "Frequency") +
theme_bw()
library(car)
leveneTest(price ~ clarity, df)
View(df)
#常態性檢查
library(dplyr)
df %>% group_by(clarity) %>% summarize(p_value=shapiro.test(price)$p.value)
library(car)
leveneTest(price ~ clarity, df)
leveneTest(Petal.Length ~ Species, iris)
leveneTest(price/1000 ~ clarity, df)
leveneTest((price/1000) ~ clarity, df)
price2=df$price
leveneTest(price2 ~ clarity, df)
price2/=1000
price2=price2/1000
leveneTest(price2 ~ clarity, df)
library(car)
leveneTest(price ~ clarity, df)
library(car)
leveneTest(price ~ clarity, df)
# (2) 同質性檢查
#使用leveneTest：
#確認不同組別數值是否變異數相等。
# p-value > 0.05，資料數值符合相同變異數。
# p-value < 0.05，資料數值不符合相同變異數。
library(car)
leveneTest(math.score ~ race.ethnicity, stu_pf)
leveneTest(Petal.Length ~ Species, iris)
leveneTest(price ~ clarity, df)
boxplot(price ~ clarity, data = df, main = "Price by Clarity", xlab = "Clarity", ylab = "Price")
boxplot(price ~ clarity, data = df, size=500,main = "Price by Clarity", xlab = "Clarity", ylab = "Price")
boxplot(price ~ clarity, data = df, size=50,main = "Price by Clarity", xlab = "Clarity", ylab = "Price")
boxplot(price ~ clarity, data = df, size=50,main = "Price by Clarity", xlab = "Clarity", ylab = "Price")
boxplot(price ~ clarity, data = df,main = "Price by Clarity", xlab = "Clarity", ylab = "Price")
boxplot(price ~ clarity(size=50), data = df,main = "Price by Clarity", xlab = "Clarity", ylab = "Price")
# 從data數據框中按照column_name欄位進行分組抽樣，每組抽取500筆數據
df2 <- df %>%
group_by(clarity) %>%
sample_n(size = 500, replace = FALSE)
view(df2)
view(df2)
head(df2)
view(df2)
df2
# 從data數據框中按照column_name欄位進行分組抽樣，每組抽取500筆數據
df2 <- df %>%
group_by(clarity) %>%
sample_n(size = 300, replace = FALSE)
df2
head(df2)
# 從data數據框中按照column_name欄位進行分組抽樣，每組抽取500筆數據
df2 <- df %>%
group_by(clarity) %>%
sample_n(size = 200, replace = FALSE)
df2
head(df2)
print(df2,n=100)
print(df2,n=1000)
# 從data數據框中按照column_name欄位進行分組抽樣，每組抽取500筆數據
df2 <- df %>%
group_by(clarity) %>%
sample_n(size = 20, replace = FALSE)
df2
print(df2,n=1000)
# 從data數據框中按照column_name欄位進行分組抽樣，每組抽取500筆數據
df2 <- df %>%
group_by(clarity) %>%
sample_n(size = 50, replace = FALSE)
print(df2,n=1000)
# 從data數據框中按照column_name欄位進行分組抽樣，每組抽取500筆數據
df2 <- df %>%
group_by(clarity) %>%
sample_n(size = 300, replace = FALSE)
print(df2,n=1000)
boxplot(price ~ clarity, data = df2,main = "Price by Clarity", xlab = "Clarity", ylab = "Price")
# 從data數據框中按照column_name欄位進行分組抽樣，每組抽取500筆數據
df2 <- df %>%
group_by(clarity) %>%
sample_n(size = 200, replace = FALSE)
print(df2,n=1000)
boxplot(price ~ clarity, data = df2,main = "Price by Clarity", xlab = "Clarity", ylab = "Price")
# 從data數據框中按照column_name欄位進行分組抽樣，每組抽取500筆數據
df2 <- df %>%
group_by(clarity) %>%
sample_n(size = 200, replace = FALSE)
print(df2,n=1600)
boxplot(price ~ clarity, data = df2,main = "Price by Clarity", xlab = "Clarity", ylab = "Price")
# 從data數據框中按照column_name欄位進行分組抽樣，每組抽取500筆數據
df2 <- df %>%
group_by(clarity) %>%
sample_n(size = 100, replace = FALSE)
print(df2,n=1600)
boxplot(price ~ clarity, data = df2,main = "Price by Clarity", xlab = "Clarity", ylab = "Price",boxwex=1.5)
boxplot(price ~ clarity, data = df2,main = "Price by Clarity", xlab = "Clarity", ylab = "Price",boxwex=0.5)
data <- c(137, 22, 348, 491, 192, 238, 491, 392, 183, 74)
data_char <- as.character(data)
# 提取每個數字的第一個字符
first_digits <- substr(data_char, 1, 1)
# 計算每個首位數字出現的頻率
freq <- prop.table(table(first_digits))
# 繪製首位數字頻率的條形圖
barplot(freq, ylim = c(0, 0.5), main = "Benford's Law Test")
# 繪製Benford's Law的預期概率
lines(1:9, log10(1 + 1/1:9), col = "red", lwd = 2)
data_char <- as.character(df$price)
# 提取每個數字的第一個字符
first_digits <- substr(data_char, 1, 1)
# 計算每個首位數字出現的頻率
freq <- prop.table(table(first_digits))
# 繪製首位數字頻率的條形圖
barplot(freq, ylim = c(0, 0.5), main = "Benford's Law Test")
# 繪製Benford's Law的預期概率
lines(1:9, log10(1 + 1/1:9), col = "red", lwd = 2)
data_char <- as.character(df$price/30)
# 提取每個數字的第一個字符
first_digits <- substr(data_char, 1, 1)
# 計算每個首位數字出現的頻率
freq <- prop.table(table(first_digits))
# 繪製首位數字頻率的條形圖
barplot(freq, ylim = c(0, 0.5), main = "Benford's Law Test")
# 繪製Benford's Law的預期概率
lines(1:9, log10(1 + 1/1:9), col = "red", lwd = 2)
data_char <- as.character(df$price/30)
# 提取每個數字的第一個字符
first_digits <- substr(data_char, 1, 1)
# 計算每個首位數字出現的頻率
freq <- prop.table(table(first_digits))
# 繪製首位數字頻率的條形圖
barplot(freq, ylim = c(0, 0.5), main = "Benford's Law Test")
data_char <- as.character(df$price)
# 提取每個數字的第一個字符
first_digits <- substr(data_char, 1, 1)
# 計算每個首位數字出現的頻率
freq <- prop.table(table(first_digits))
# 繪製首位數字頻率的條形圖
barplot(freq, ylim = c(0, 0.5), main = "Benford's Law Test")
# 繪製Benford's Law的預期概率
lines(1:9, log10(1 + 1/1:9), col = "red", lwd = 2)
data_char <- as.character(df$price/5)
# 提取每個數字的第一個字符
first_digits <- substr(data_char, 1, 1)
# 計算每個首位數字出現的頻率
freq <- prop.table(table(first_digits))
# 繪製首位數字頻率的條形圖
barplot(freq, ylim = c(0, 0.5), main = "Benford's Law Test")
# 繪製Benford's Law的預期概率
lines(1:9, log10(1 + 1/1:9), col = "red", lwd = 2)
data_char <- as.character(df$price)
# 提取每個數字的第一個字符
first_digits <- substr(data_char, 1, 1)
# 計算每個首位數字出現的頻率
freq <- prop.table(table(first_digits))
# 繪製首位數字頻率的條形圖
barplot(freq, ylim = c(0, 0.5), main = "Benford's Law Test")
# 繪製Benford's Law的預期概率
lines(1:9, log10(1 + 1/1:9), col = "red", lwd = 2)
# 繪製首位數字頻率的條形圖
barplot(freq, ylim = c(0, 0.5), main = "Benford's Law Test")
data_char <- as.character(df$price)
# 提取每個數字的第一個字符
first_digits <- substr(data_char, 1, 1)
# 計算每個首位數字出現的頻率
freq <- prop.table(table(first_digits))
# 繪製首位數字頻率的條形圖
barplot(freq, ylim = c(0, 0.5), main = "Benford's Law Test")
# 繪製Benford's Law的預期概率
lines(1:9, log10(1 + 1/1:9), col = "red", lwd = 2)
data_char <- as.character(df$price*134)
# 提取每個數字的第一個字符
first_digits <- substr(data_char, 1, 1)
# 計算每個首位數字出現的頻率
freq <- prop.table(table(first_digits))
# 繪製首位數字頻率的條形圖
barplot(freq, ylim = c(0, 0.5), main = "Benford's Law Test")
# 繪製Benford's Law的預期概率
lines(1:9, log10(1 + 1/1:9), col = "red", lwd = 2)
data_char <- as.character(df$price*133)
# 提取每個數字的第一個字符
first_digits <- substr(data_char, 1, 1)
# 計算每個首位數字出現的頻率
freq <- prop.table(table(first_digits))
# 繪製首位數字頻率的條形圖
barplot(freq, ylim = c(0, 0.5), main = "Benford's Law Test")
# 繪製Benford's Law的預期概率
lines(1:9, log10(1 + 1/1:9), col = "red", lwd = 2)
data_char <- as.character(df$price*0.91)
# 提取每個數字的第一個字符
first_digits <- substr(data_char, 1, 1)
# 計算每個首位數字出現的頻率
freq <- prop.table(table(first_digits))
# 繪製首位數字頻率的條形圖
barplot(freq, ylim = c(0, 0.5), main = "Benford's Law Test")
# 繪製Benford's Law的預期概率
lines(1:9, log10(1 + 1/1:9), col = "red", lwd = 2)
data_char <- as.character(df$price*1318)
# 提取每個數字的第一個字符
first_digits <- substr(data_char, 1, 1)
# 計算每個首位數字出現的頻率
freq <- prop.table(table(first_digits))
# 繪製首位數字頻率的條形圖
barplot(freq, ylim = c(0, 0.5), main = "Benford's Law Test")
# 繪製Benford's Law的預期概率
lines(1:9, log10(1 + 1/1:9), col = "red", lwd = 2)
data_char <- as.character(df$price*132)
# 提取每個數字的第一個字符
first_digits <- substr(data_char, 1, 1)
# 計算每個首位數字出現的頻率
freq <- prop.table(table(first_digits))
# 繪製首位數字頻率的條形圖
barplot(freq, ylim = c(0, 0.5), main = "Benford's Law Test")
# 繪製Benford's Law的預期概率
lines(1:9, log10(1 + 1/1:9), col = "red", lwd = 2)
data_char <- as.character(df$price*7)
# 提取每個數字的第一個字符
first_digits <- substr(data_char, 1, 1)
# 計算每個首位數字出現的頻率
freq <- prop.table(table(first_digits))
# 繪製首位數字頻率的條形圖
barplot(freq, ylim = c(0, 0.5), main = "Benford's Law Test")
# 繪製Benford's Law的預期概率
lines(1:9, log10(1 + 1/1:9), col = "red", lwd = 2)
data_char <- as.character(df$price*6.8)
# 提取每個數字的第一個字符
first_digits <- substr(data_char, 1, 1)
# 計算每個首位數字出現的頻率
freq <- prop.table(table(first_digits))
# 繪製首位數字頻率的條形圖
barplot(freq, ylim = c(0, 0.5), main = "Benford's Law Test")
# 繪製Benford's Law的預期概率
lines(1:9, log10(1 + 1/1:9), col = "red", lwd = 2)
data_char <- as.character(df$price*30)
# 提取每個數字的第一個字符
first_digits <- substr(data_char, 1, 1)
# 計算每個首位數字出現的頻率
freq <- prop.table(table(first_digits))
# 繪製首位數字頻率的條形圖
barplot(freq, ylim = c(0, 0.5), main = "Benford's Law Test")
# 繪製Benford's Law的預期概率
lines(1:9, log10(1 + 1/1:9), col = "red", lwd = 2)
data_char <- as.character(df$price*0.9)
# 提取每個數字的第一個字符
first_digits <- substr(data_char, 1, 1)
# 計算每個首位數字出現的頻率
freq <- prop.table(table(first_digits))
# 繪製首位數字頻率的條形圖
barplot(freq, ylim = c(0, 0.5), main = "Benford's Law Test")
# 繪製Benford's Law的預期概率
lines(1:9, log10(1 + 1/1:9), col = "red", lwd = 2)
data_char <- as.character(df$price*0.8)
# 提取每個數字的第一個字符
first_digits <- substr(data_char, 1, 1)
# 計算每個首位數字出現的頻率
freq <- prop.table(table(first_digits))
# 繪製首位數字頻率的條形圖
barplot(freq, ylim = c(0, 0.5), main = "Benford's Law Test")
data_char <- as.character(df$price*1.6)
# 提取每個數字的第一個字符
first_digits <- substr(data_char, 1, 1)
# 計算每個首位數字出現的頻率
freq <- prop.table(table(first_digits))
# 繪製首位數字頻率的條形圖
barplot(freq, ylim = c(0, 0.5), main = "Benford's Law Test")
data_char <- as.character(df$price*0.8)
# 提取每個數字的第一個字符
first_digits <- substr(data_char, 1, 1)
# 計算每個首位數字出現的頻率
freq <- prop.table(table(first_digits))
# 繪製首位數字頻率的條形圖
barplot(freq, ylim = c(0, 0.5), main = "Benford's Law Test")
# 繪製Benford's Law的預期概率
lines(1:9, log10(1 + 1/1:9), col = "red", lwd = 2)
data_char <- as.character(df$price*81)
# 提取每個數字的第一個字符
first_digits <- substr(data_char, 1, 1)
# 計算每個首位數字出現的頻率
freq <- prop.table(table(first_digits))
# 繪製首位數字頻率的條形圖
barplot(freq, ylim = c(0, 0.5), main = "Benford's Law Test")
# 繪製Benford's Law的預期概率
lines(1:9, log10(1 + 1/1:9), col = "red", lwd = 2)
data_char <- as.character(df$price*81)
# 提取每個數字的第一個字符
first_digits <- substr(data_char, 1, 1)
# 計算每個首位數字出現的頻率
freq <- prop.table(table(first_digits))
# 繪製首位數字頻率的條形圖
barplot(freq, ylim = c(0, 0.5), main = "Benford's Law Test")
# 繪製Benford's Law的預期概率
lines(1:9, log10(1 + 1/1:9), col = "red", lwd = 2)
data_char <- as.character(df$price*14840)
# 提取每個數字的第一個字符
first_digits <- substr(data_char, 1, 1)
# 計算每個首位數字出現的頻率
freq <- prop.table(table(first_digits))
# 繪製首位數字頻率的條形圖
barplot(freq, ylim = c(0, 0.5), main = "Benford's Law Test")
# 繪製Benford's Law的預期概率
lines(1:9, log10(1 + 1/1:9), col = "red", lwd = 2)
data_char <- as.character(df$price*4.43)
# 提取每個數字的第一個字符
first_digits <- substr(data_char, 1, 1)
# 計算每個首位數字出現的頻率
freq <- prop.table(table(first_digits))
# 繪製首位數字頻率的條形圖
barplot(freq, ylim = c(0, 0.5), main = "Benford's Law Test")
# 繪製Benford's Law的預期概率
lines(1:9, log10(1 + 1/1:9), col = "red", lwd = 2)
data_char <- as.character(df$price*133.97)
# 提取每個數字的第一個字符
first_digits <- substr(data_char, 1, 1)
# 計算每個首位數字出現的頻率
freq <- prop.table(table(first_digits))
# 繪製首位數字頻率的條形圖
barplot(freq, ylim = c(0, 0.5), main = "Benford's Law Test")
# 繪製Benford's Law的預期概率
lines(1:9, log10(1 + 1/1:9), col = "red", lwd = 2)
